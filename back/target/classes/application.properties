spring.application.name=pruebaSpring

spring.datasource.url=jdbc:postgresql://localhost:5432/prueba
spring.datasource.username=postgres
#spring.datasource.password=anthony23
spring.datasource.password=qwert

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=TRACE

# En producci�n, se recomienda usar 'validate' o 'none' y gestionar el esquema con herramientas como Flyway o Liquibase.
spring.jpa.hibernate.ddl-auto=update

# ===============================================
# CONFIGURACI�N DE JSON WEB TOKEN (JWT)
# ===============================================
# Clave secreta segura (larga, aleatoria y en Base64)
jwt.secret=bWFrcm9wb2x1czE5OTFAZ21haWwuY29tYW50aG9ueXJhbWlyZXp5YW5keXBhcmVkZXM=

# Expiraci�n del token (1 hora = 3,600,000 milisegundos) - CORREGIDO
jwt.expiration=3600000

# --- Configuraci�n del Servidor de Correo (Gmail) ---
# --- INICIO DE CORRECCI�N ---
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=jordyrivas14@gmail.com
spring.mail.password=amsogctawuxpsyt
# --- FIN DE CORRECCI�N ---

# --- Propiedades Adicionales de JavaMail ---
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true